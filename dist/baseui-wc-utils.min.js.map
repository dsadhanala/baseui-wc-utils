{"version":3,"file":"baseui-wc-utils.min.js","sources":["../src/dom/index.js","../src/dom/class-list/index.js","../src/dom/event-handlers/index.js","../src/helpers/index.js","../src/doc-fragment-generator/index.js","../src/ajax/get-json/index.js","../src/ajax/load-script/index.js","../src/html-escape/index.js","../src/index.js"],"sourcesContent":["import { addClass, removeClass, hasClass, toggleClass } from './class-list';\nimport { on, off, trigger } from './event-handlers';\n\n/**\n * attaches dom ready listener to CB given function\n * @param {Function} callback function that needs to be triggered when event fired\n */\nexport function ready(callback) {\n    document.addEventListener('DOMContentLoaded', callback, false);\n}\n\n/**\n * Helper function to search through DOM/ShadowRoot\n * @param {object} selector element which needs to be searched for\n * @param {object} context to search within\n * @param {string} mode to seach mode one/all\n * @return {object} element found\n */\nexport function find(selector, context = document, mode = 'one') {\n    const searchMode = (mode === 'all') ? 'querySelectorAll' : 'querySelector';\n    return context[searchMode](selector);\n}\n\n/**\n * helper to loop through array/nodeList as forEach support for nodeList is not available\n * also it's super fast in all browsers compared to forEach/map see this URL to check https://repl.it/ClBm/17\n * @param {array} array elements to loop through\n * @param {Function} callback function to call for each iteration\n */\nexport function loopEach(array, cb) {\n    if (Array.from) {\n        Array.from(array).forEach(cb);\n        return;\n    }\n\n    for (let i = 0, { length } = array; i < length; i += 1) {\n        cb(array[i], i, array);\n    }\n}\n\nexport default {\n    ready,\n    find,\n    loopEach,\n    addClass,\n    removeClass,\n    hasClass,\n    toggleClass,\n    on,\n    off,\n    trigger\n};\n","/**\n * helper function to add class name using classList\n * @param {object} element DOM element\n * @param {string} className string of class name\n * @return {object} element DOM element\n */\nexport function addClass(element, className) {\n    element.classList.add(className);\n    return element;\n}\n\n/**\n * helper function to remove class name using classList\n * @param {object} element DOM element\n * @param {string} className string of class name\n * @return {object} element DOM element\n */\nexport function removeClass(element, className) {\n    element.classList.remove(className);\n    return element;\n}\n\n/**\n * helper function to check for has class name using classList\n * @param {object} element DOM element\n * @param {string} className string of class name\n * @return {boolean} contains true/false\n */\nexport function hasClass(element, className) {\n    return element.classList.contains(className);\n}\n\n/**\n * helper function to toggle class name using classList\n * @param {object} element DOM element\n * @param {string} className string of class name\n * @param {boolean} force boolean to use force optionally\n * @return {object} element DOM element\n */\nexport function toggleClass(element, className, force) {\n    return element.classList.toggle(className, force);\n}\n\nexport default { addClass, removeClass, hasClass, toggleClass };\n","/**\n * simplyfied event handler function, this allows to bind this context\n * also to avoid rendendant duplicate code for bind\n * @param {object} target HTML element that needs event to be added\n * @param {string} eventName event type ex: click, blur, etc.\n * @param {Function} callbackFunc callback function that needs to be triggerd\n * @param {object} context bind context\n */\nexport function on(eventName, target, callbackFunc, context) {\n    const bindContext = context || target;\n    target.addEventListener(eventName, callbackFunc.bind(bindContext), false);\n}\n\n/**\n * simplyfied event handler function to remove events\n * @param {object} target HTML element that needs event to be added\n * @param {string} eventName event type ex: click, blur, etc.\n * @param {Function} callbackFunc callback function that needs to be triggerd\n */\nexport function off(eventName, target, callbackFunc) {\n    target.removeEventListener(eventName, callbackFunc, false);\n}\n\n/**\n * trigger native/custom event and pass data between components\n * @param {object} target element reference on which event needs to be triggerd\n * @param {string} eventName custom event name\n * @param {object} eventData custom event data to share\n */\nexport function trigger(eventName, target, eventData) {\n    const triggerEvent = (!eventData) ? new Event(eventName) : new CustomEvent(eventName, { detail: eventData || {} });\n    target.dispatchEvent(triggerEvent);\n}\n\nexport default { on, off, trigger };\n","/**\n * Converts string camelcase to hyphennated\n * @param {string} word data that passed to the function\n * @return {string} word converted string\n */\nexport function toHyphenCase(word) {\n    return word.replace(/([a-z])([A-Z])/g, '$1-$2').toLowerCase();\n}\n\n/**\n * Converts string hyphennated to camelcase\n * @param {string} word data that passed to the function\n * @return {string} word converted string\n */\nexport function toCamelCase(word) {\n    return word.replace(/\\b(_|-)([a-z])/g, (s, f, c) => c.toUpperCase());\n}\n\n/**\n * Convert attributes into properties\n * @param {object} obj attributes\n * @return {object} properties object\n */\nexport function createProps(obj) {\n    if (!obj) return false;\n\n    const props = {};\n\n    Object.keys(obj).forEach((key) => {\n        props[toCamelCase(obj[key].name)] = obj[key].value;\n    });\n\n    return props;\n}\n\n/**\n * check if boolean attributes ex: checked, disabled, etc. exist\n * @param {object} props element properties\n * @param {string} attr attribute name\n * @return {string} value to add\n */\nexport function setBooleanAttributeValue(props, attr) {\n    return ({}.hasOwnProperty.call(props, attr)) ? attr : '';\n}\n\n/**\n * Validate if date provided\n * @param {string} value date value\n * @return {boolean} response valid date or not\n */\nexport function isValidDate(value) {\n    return !Number.isNaN(Date.parse(value));\n}\n\n/**\n * Set attributes on the element if passed as object\n * @param {object} attrs attributes object, ex: checked, name, value, label, etc.\n * @param {object} field element, ex: input, radio, header-text, etc.\n */\nexport function addAttributes(attrs, field) {\n    if (!attrs || !field) return;\n\n    Object.keys(attrs).forEach((attr) => {\n        field.setAttribute(attr, attrs[attr]);\n    });\n}\n\nexport default {\n    toHyphenCase,\n    toCamelCase,\n    createProps,\n    setBooleanAttributeValue,\n    isValidDate,\n    addAttributes\n};\n","import { loopEach } from '../dom';\nimport { addAttributes } from '../helpers';\n\nclass BuildDocumentFragment {\n    constructor(htmlElementsArray = []) {\n        this.elementsArray = htmlElementsArray;\n        this.docFragment   = document.createDocumentFragment();\n    }\n\n    getTemplate() {\n        if (!this.elementsArray) return '';\n\n        this._init(this.elementsArray, this.docFragment);\n        return this.docFragment;\n    }\n\n    /**\n     * Initiate fragment generation\n     * @param {array} children elements which needs to be nested inside\n     * @param {object} contextToPass element/fragment to which newly created element will be added to\n     */\n    _init(array, contextToPass) {\n        loopEach(array, (ele) => {\n            this._buildDynamicMarkup(ele, contextToPass);\n        });\n    }\n\n    /**\n     * adds child elements to the field\n     * @param {array} children elements which needs to be nested inside\n     * @param {object} field element, ex: input, radio, header-text, etc.\n    */\n    _addChildren(children, field) {\n        if (!children || !field) return;\n\n        this._init(children, field);\n    }\n\n    /**\n     * adds inner text to the field\n     * @param {string} innerText text content that needs to be injected into element\n     * @param {object} field element, ex: input, radio, header-text, etc.\n     */\n    static _addInnerText(innerText, field) {\n        if (!innerText || !field) return;\n\n        const formField = field;\n        formField.innerHTML = innerText;\n    }\n\n    /**\n     * Build HTML markup based on given data, this will add element to nested DOM/document fragment (context)\n     * @param {object} item contains component name, children, attributes and innerText properties\n     * @param {object} context element/fragment to which newly created element will be added to\n     */\n    _buildDynamicMarkup(item, context) {\n        const formField          = document.createElement(item.component);\n        const formFieldAttrs     = item.attributes;\n        const formFieldChildren  = item.children;\n        const formFieldInnerText = item.innerText;\n\n        addAttributes(formFieldAttrs, formField);\n        this._addChildren(formFieldChildren, formField);\n        this.constructor._addInnerText(formFieldInnerText, formField);\n\n        context.appendChild(formField);\n    }\n}\n\nexport default BuildDocumentFragment;\n","/**\n * Converts raw reponse data to JS object\n * @param {object} response fetch request's response\n * @return {object} response converted raw data to JS object\n */\nfunction getParsedJSON(response) {\n    return response.json();\n}\n\n/**\n * Check for fetch request status, reusable utility function\n * @param {object} response fetch request's response\n * @return {object} reponse/error based on the status it will throw error or return response\n */\nfunction checkRequestStatus(response) {\n    if (response.status >= 200 && response.status < 300) {\n        return response;\n    }\n\n    const error    = new Error(response.statusText);\n    error.response = response;\n    throw error;\n}\n\n/**\n * helper function for using fetch and give back JSON data\n * @param {string} url URL to use in fetch\n * @return {object} Promise returns promise with response object\n */\nexport default function getJSON(url) {\n    return fetch(url, { credentials: 'same-origin' })\n        .then(checkRequestStatus)\n        .then(getParsedJSON);\n}\n","/**\n * Log load script promise errors\n * @param {string} reason for the failure\n */\nexport function promiseRejected(reason) {\n    throw new Error(`Loading JS assets failed due to ${reason}.`);\n}\n\n/**\n * Helper function to dynamically add scripts to the page.\n * @param {string} src URL to the script file\n * @param {boolean} loadAsync load async or not\n * @return {object} Promise\n */\nexport default function loadScript(src, loadAsync = false, loadDefer = true) {\n    return new Promise((resolve, reject = promiseRejected) => {\n        const script = document.createElement('script');\n\n        script.async   = loadAsync;\n        script.defer   = loadDefer;\n        script.src     = src;\n        script.onload  = resolve;\n        script.onerror = reject;\n\n        document.head.appendChild(script);\n    });\n}\n","/**\n * configuration object for escaping HTML markup using ES6 Template literals\n * @type {Object}\n */\nconst escapeConfig = {\n    regexEscape  : /[&<>'\"]/g,\n    regexUnescape: /&(?:amp|#38|lt|#60|gt|#62|apos|#39|quot|#34);/g,\n    objEscape: {\n        '&': '&amp;',\n        '<': '&lt;',\n        '>': '&gt;',\n        \"'\": '&#39;',\n        '\"': '&quot;'\n    },\n    objUnescape: {\n        '&amp;' : '&',\n        '&#38;' : '&',\n        '&lt;'  : '<',\n        '&#60;' : '<',\n        '&gt;'  : '>',\n        '&#62;' : '>',\n        '&apos;': \"'\",\n        '&#39;' : \"'\",\n        '&quot;': '\"',\n        '&#34;' : '\"'\n    }\n};\n\n/**\n * takes in config object and two helper methods escape/unescape returns updated string\n */\nclass EscapeUtil {\n    constructor(configObj) {\n        this.config     = configObj;\n        this.replace    = String.prototype.replace;\n        this.fnEscape   = key => this.config.objEscape[key];\n        this.fnUnescape = key => this.config.objUnescape[key];\n    }\n\n    escape(s) {\n        return (!s) ? '' : this.replace.call(s, this.config.regexEscape, this.fnEscape);\n    }\n\n    unescape(s) {\n        return (!s) ? '' : this.replace.call(s, this.config.regexUnescape, this.fnUnescape);\n    }\n}\n\n/**\n * helper function works as tagged template literals, which allow us to modify output of the string.\n * @param {array} strings array of string literals\n * @param {array} dynamic binding values of the processed substitution expressions\n * @return {string} concatinated\n */\nfunction htmlEscape(strings, ...bindings) {\n    const escapeUtil = new EscapeUtil(escapeConfig);\n\n    const result = bindings.reduce((accumulator, current, i) => {\n        const regexSpaceRemove = /\\s\\s+/g;\n        return (accumulator + escapeUtil.escape(current) + strings[i + 1]).replace(regexSpaceRemove, ' ');\n    }, strings[0]);\n\n    return result.trim();\n}\n\nexport default htmlEscape;\n","export { default as dom } from './dom';\nexport { default as DocFragmentGenerator } from './doc-fragment-generator';\nexport { getJSON, loadScript } from './ajax';\nexport { default as helpers } from './helpers';\nexport { default as htmlEscape } from './html-escape';\n\nconst obj1 = { firstName: 'Hello' };\nconst obj2 = { lastName: 'World!' };\n\nconst newObj = { ...obj1, ...obj2 };\nconsole.log(newObj);"],"names":["loopEach","array","cb","Array","from","forEach","length","i","callback","addEventListener","selector","document","element","className","classList","add","remove","contains","force","toggle","eventName","target","callbackFunc","context","bindContext","bind","removeEventListener","eventData","triggerEvent","CustomEvent","detail","Event","dispatchEvent","toCamelCase","word","replace","s","f","c","toUpperCase","addAttributes","attrs","field","keys","attr","setAttribute","toLowerCase","obj","props","key","name","value","hasOwnProperty","call","Number","isNaN","Date","parse","BuildDocumentFragment","htmlElementsArray","elementsArray","docFragment","createDocumentFragment","this","_init","contextToPass","ele","_buildDynamicMarkup","children","item","formField","createElement","component","formFieldAttrs","attributes","formFieldChildren","formFieldInnerText","innerText","_addChildren","constructor","_addInnerText","appendChild","innerHTML","getParsedJSON","response","json","checkRequestStatus","status","error","Error","statusText","promiseRejected","reason","escapeConfig","EscapeUtil","configObj","config","String","prototype","fnEscape","_this","objEscape","fnUnescape","objUnescape","regexEscape","regexUnescape","newObj","firstName","lastName","console","log","url","fetch","credentials","then","src","loadAsync","loadDefer","Promise","resolve","reject","script","async","defer","onload","onerror","head","strings","escapeUtil","bindings","reduce","accumulator","current","escape","trim"],"mappings":"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"}